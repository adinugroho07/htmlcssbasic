display 
div secara default display nya adalah block
span secara default display nya adalah inline

element yang secara default display block :
 - <address> , <article> , <aside> , <blockquote> , <canvas> , <dd> , <div> , <dl> , <dt> , <fieldset> , <figcaption> , <figure> , <footer> , <form>
   <h1>-<h6> , <header> , <hr> , <li> , <main> , <nav> , <noscript> , <ol> , <p> , <pre> , <section> , <table> , <tfoot> , <ul> , <video> 

- block : - Element HTML yang secara default akan menambahkan line baru ketika di buat.
          - jika di tidak di atur lebar nya maka lebar default dari element block akan memenuhi lebar dari browser / parent nya.
		  - kita dapat mengatur tinggi dan lebar dari element block.
		  - di dalam element block kita dapat menyimpan tag dengan element inline, inline block atau bahkan element block lagi.
- inline : - element HTML yang secara default tidak menambahkan baris baru ketika di buat. 
           - lebar dan tinggi element nya sebesar konten yang ada di dalam nya.
           - kita tidak dapat mengatur tinggi dan lebar dari elemen inline
           - Margin dan pasdding hanya mempengaruhi element secara horizontal, tidak vertikal. 
  contoh element yang inline : b, strong, i, em, a,span,sub,sup,button, input,label,select,textarea,img
- inline-block : - tidak ada element yang secara default memiliki properti display: inline-block
                 - kita harus ubah secara manual properti tersebut.
                 - prilaku dasarnya sama dengan inline
                 - perbedaannya element inline-block dapat kita atur tinggi dan lebar nya. 				 
				 
- none : di gunakan untuk menghilangkan sebuah element.

Flexbox :
- di gunakan untuk mensejajarkan element secara vertikal atau sejajar dengan lebar antar element yang sama.
- model layout 1 dimensi yang dapat mengatur jarak dan penjajaran antar item dalam sebuah container. maksud dari 1 dimensi ini adalah kita hanya dapat mengatur 1 dimensi
  secara horizontal(ke kanan->ke kiri) atau vertikal (keatas->kebawah) atau bisa kita sebut antara baris atau kolom.
- sebuah module yang menawarkan cara yang efektif untuk menyusun, mensejajarkan dan mendistribusikan jarak antar item di dalam sebuah container, meskipun ukurannya
  dinamis atau bahkan kita tidak tahu.
- flexbox ini harus mempunyai element pembungkusnya yang di namakan container/parents. element2 yang ada di dalam nya itu di sebut items/child.
- main axis adalah untuk men set element secara horizontal/baris, sedangkan untuk men set element secara vertikal/kolom kita sebut cross axis.
- main size adalah ukuran dari kontainer nya.
- cross size adalah ukuran dari kolom nya.
- main start dan main end adalah untuk menentukan awal dan akhir dari element nya secara horizontal.
- cross start dan cross end adalah untuk menentukan awal dan akhir dari element nya secara vertikal.
- property -> display: flex -> membuat sebuah element parent/pembungkusnya menjadi flex box dan element2 di dalam nya bisa berprilaku flex juga. 
- beberapa property yang bisa di gunakan pada flex container.
	- flex-direction : untuk menentukan arah (horizontal/vertikal) dari item2 pada container. berikut pilihan value nya :
		  1. row : secara horizontal dengan urutan normal.
		  2. row-reverse : secara horizontal dengan urutan terbalik.
		  3. column : secara vertikal dengan urutan normal.
		  4. column-reverse : secara vertikal dengan urutan terbalik.
	- flex-wrap : untuk mengatur ketika element items yang ada sudah tidak muat di baris nya sehingga item yang tidak muat tersebut di pindah kan ke baris bawah nya.
	  jika tidak di berikan flex-wrap maka items akan di paksa untuk fit di dalam container dengan cara lebar dan tinggi items di kecil kan supaya fit di container.
	  berikut pilihan value nya :
		  1. nowrap : tidak di wrap.
		  2. wrap : untuk menurunkan item pada baris jika sudah tidak cukup di baris nya sehingga lebar dan tinggi items tidak mengecil.
		  3. wrap-reverse :
	- flex-flow
	- justify-content : untuk mengatur rata dari element2 items secara horizontal/baris di dalam container. berikut pilihan opsip nya :
		  1. flex-start : membuat posisi items berada di kiri secara horizontal.
		  2. flex-end : membuat posisi items berada di kanan secara horizontal.
		  3. center : membuat posisi items berada di tengah.
		  4. space-between : membuat antar element terdapat space atau ruang.
		  5. space-around : membuat pada setiap element baik kiri dan kanan mempunyai space atau ruang dengan ukuran yang sama.
		  6. space-evenly : membuat jarak antar element sama.
	- align-items : untuk mengatur kesejajaran antar items secara vertikal. berikut pilihan opsi nya :
		  1. flex-start : membuat posisi items berada di atas semua start nya.
		  2. flex-end : membuat posisi items berada di bawah semua start nya.
		  3. center : membuat posisi items berada sejajar di tengah secara vertikal.
		  4. stretch : akan menarik elemnt untuk memenuhi container tapi di element items nya harus tidak di set height nya.
		  5. baseline : mengatur rata tengah nya berdasarkan tulisan yang ada pada element items.
	- align-content : untuk mengatur jarak antar items terhadap cross axis atau secara vertikal/kolom di dalam container. 
	                  properti ini hanya berfungsi jika element items lebih dari 1 baris. berikut beberapa opsi nya :
		  1. flex-start : membuat posisi items berada di atas secara vertikal.
		  2. flex-end : membuat posisi items berada di bawah secara vertikal.
		  3. center : membuat posisi items berada di tengah secara vertikal.
		  4. stretch : akan menarik elemnt untuk memenuhi container tapi di element items nya harus tidak di set height nya.
		  5. space-between : membuat element items di pecah, beberapa berada di atas dan beberapa di bawah sehingga membuat space di tengah container secara vertikal.
		  6. space-around : membuat setiap element items mempunyai space di atas dan di bawah nya dengan ukuran yang sama sehingga ketika di gabung dengan element yang
		                    lain akan mempunyai ukuran space 2 kali (space bawah dari element di atas dan space atas dari element di bawah ). 
	
- beberapa property pada CSS3 yang bisa di gunakan pada items :
	- order : untuk mengatur order/susunan dari flex item. secara default seluruh element mempunyai nilai order 0, sehingga jika salah satu items di berikan nilai order 
	          dia akan mempunyai posisi di paling kanan karena nilai order nya paling tinggi (order > 0) .
	- flex-grow : untuk membuat flex items bertumbuh beberapa kali lipat dari flex item yang ada. misal kita mau menspesifikkan bahwa flex item tertentu lebar nya
	              10 kali lipat dari flex item yang ada , nah kita bisa menggunakan property ini. contoh : flex-grow: 1; . value yang di isi kan harus angka.
	- flex-shrink : untuk membuat flex item mengecil beberapa kali lipat dari flex item yang ada. misal kita mau mengubah sebuah flex item yang cukup lebar untuk di kecil 
	                kan lebar nya, maka kita bisa menggunakan property ini untuk mengecil kan flex item tersebut. contoh : flex-shrink: 1;. value yang di isi kan harus angka.
	- flex-basis : untuk menspesifikkan initial value dari panjang flex item. jika item tersebut bukan merupakan flexible item maka property flex-basis ini tidak akan bekerja. 
	               contoh : flex-basis: 200px; maka flex item yang di berikan properti tersebut akan mempunyai lebar sebesar 200px.
	- flex : shorthand untuk penulisan property flex-grow, flex-shrink, dan flex-basis. syntaks nya -> flex: <flex-grow> <flex-shrink> <flex-basis>;
	- align-self : mengatur perilaku penjajaran sebuah flex item yang spesific secara vertikal. bedanya dengan align-content adalah kalo align-content itu 1 baris , kalo 
	               align-self hanya 1 flex item saja. berikut adalah opsi value nya.
		  1. auto : ini adalah pilihan default. flex item akan menggunakan value yang di define pada align-items property parents atau dia akan strech jika tidak mempunyai
		            parent container.
		  2. flex-start : membuat posisi items berada di atas secara vertikal.
		  3. flex-end : membuat posisi items berada di bawah secara vertikal.
		  4. center : membuat posisi items berada sejajar di tengah secara vertikal.
		  5. stretch : akan menarik elemnt untuk memenuhi container tapi di element items nya harus tidak di set height nya.
		  6. baseline : mengatur rata tengah nya berdasarkan tulisan yang ada pada element items.
		  
- perhitungan dengan menggunakan % adalah dia mengambil prosentase dari parent element nya.
  contoh di dalam body kita buat div, di div kita kasih css dengan width 100%, artinya width di div akan mengambil 100% panjang dari element parent nya body.			
  jika pada element div tersebut prosentase nya di set di atas 100% maka nanti lebar dari div tersebut akan melebihi lebar dari parent nya.
- jika pada div width di set up panjang nya dan tinggi div tidak di set up maka tinggi pada div tersebut akan mengikut tinggi dari content yang ada di dalam div .
  begitu juga sebalik nya jika width pada div tidak di set dan tinggi div di set maka lebar div akan mengikuti content yang ada di dalam div tersebut. namun jika 
  width dan height pada div tidak di set maka lebar dan tinggi div akan mengikutin content yang ada didalam div.
- jika content yang ada di dalam div mempunyai ukuran lebih tinggi dari width dan height yang telah di set di div maka content tersebut akan luber keluar melebihi
  width dan height yang telah di set.  
  
Overflow : di gunakan jika sebuah kontent pada div, lebar dan tinggi nya melebihi dari lebar dan tinggi div parent yang telah di set.
berikut macam2 overflow :
- visible : secara default overflow yang di gunakan adalah visible yang artinya dia akan memperlihat kan kontent yang keluar dari 
            parent nya (lebar & tinggi content > lebar & tinggi div).
- Auto : jika panjang & tinggi kontent melebihi panjang & tinggi parent nya (div) yang telah di set maka nanti di div akan di buat ada scroll bar nya. tapi jika tinggi dan lebar
         content tidak melebihi parent nya (div) maka scroll bar akan secara otomatis ilang.
- Hidden : jika panjang & tinggi kontent melebihi panjang & tinggi parent nya (div) yang telah di set maka nanti sisa bagian content yang keluar dari parent nya akan di hide
           dan tidak dapat di akses.
- Scroll : jika panjang & tinggi kontent melebihi panjang & tinggi parent nya (div) yang telah di set maka nanti di div akan di buat ada scroll bar nya. tapi jika tinggi dan lebar
           content tidak melebihi parent nya (div) maka scroll bar akan tetap ada walaupun tidak bisa di akses.


Konsep Dasar : 
- Setiap Element di halaman berada di dalam sebuah box(kotak)
- kita bisa mengatur ukuran dan posisi kotak tersebut.
- kita bisa memberi warna atau gambar background dari kotak tersebut.
- CSS box model mendefinisikan kotak yang di hasilkan oleh sebuah element lalu menampilkan sesuai dengan format visual nya.
- css box model terdiri dari margin,border,padding,content. urutannya dari sebuah box model adalah margin>border>padding>content
  - margin : area transparant di sekitar kotak (di luar border)
  - padding : area transparant di dalam kotak (antara kontent dan border)
  - border : batas di keliling content dan padding.
  - content : konten sebenarnya di dalam box, bisa berupa text atau gambar.

Margin Overlapping : 
- jika ada 2 box model yang berposisi sejajar vertikal, box 1 di set margin-bottom 150px dan box 2 di set margin-top 50px maka jarak margin antara
  box 1 dan 2 adalah 150px. jadi margin ini tidak akan saling menambahkan jarak nya khusus yang vertikal, dia akan selalu pilih jarak yang paling besar (box 1)
- jika ada 2 box model yang berposisi sejajar horizontal, box 1 di set margin-right 50px, box 2 di set margin-left 30px. maka jarak antara box 1 dan 2 akan menjadi 80px.
  jadi margin ini akan saling menambahkan jaraknya jika posisi box model sejajar horizontal.

Negatif Margin :
- jika sebuah box model di set margin nya negatif maka dia akan bergerak ke arah sebalik nya. contoh margin-top di set negatif maka box model akan bergerak ke atas.
  namun perlu di perhatikan jika menggunakan margin negatif itu, karena jika sebuah box model set negatif margin nya maka box model di sebelah akan ikut bergerak sesuai dengan
  box model yang di set negatif margin nya.

Margin Auto :
- jika box model di set margin auto maka posisi nya dia akan berada di tengah dari parent element nya. misal ada div di dalam body dan div tersebut margin nya di set Auto
  maka div tersebut akan bergeser ke tengah dari element parent nya (body).

Margin setting :
- margin : value(set atas dan bawah) value(set kiri dan kanan);  
- margin : value(set atas) value(set kiri dan kanan) value(set bawah);
- margin : value(set atas) value(set kanan) value(set bawah) value(set kiri)

Padding & Border :
- lebar dari padding dan border akan berpengaruh kepada lebar box nya. contoh jika ada suatu box di set width nya 300px dan tinggi 300px. jika di box tersebut padding di set 10px,
  border di set 5px, maka lebar box tersebut adalah 300px + 5px (border kiri) + 10px (padding kiri) + 10px (padding kanan) + 5px (border kanan) jadi 330px width box nya. jadi jika
  kita ingin tetap lebar box nya di 300px maka kita perlu hitung seperti ini 300px (lebar box) - (5px (border kiri) + 10px (padding kiri) + 10px (padding kanan) + 5px (border kanan))
  jadi hasil nya 270px, sehingga width dari box tersebut di set 270px.
- Padding tidak menerima value negatif dan auto, jika padding di set negatif atau auto maka dia tidak akan bereaksi apa2.  
- format penulisan border -> border : (tebal border) (tipe/style border) (warna garis border); contoh = border: 5px solid black;
  style border ada 4 : solid , dotted , dashed , double .

Box-sizing : 
- untuk membuat lebar dari box sesuai dengan yang di set di awal walaupun ada penambahan lebar box dari border dan padding. jadi misal sebuah box di set width nya 300px
  dan di tambahkan box-sizing: border-box, maka walaupun kita set padding dan border di box tersebut (brapa pun nilai nya) , lebar dari box tersebut akan tetap 300px.
- syntaks nya adalah -> box-sizing: border-box
            
CSS Reset :
- untuk mereset semua default value yang ada pada body,div,dll. cara nya dengan menggunakan universal selector (*) .
- contoh -> * { css code } 
- namun menggunakan css reset universal ini juga ada yang bilang kurang baik karena dia akan memberikan efek dari code yang kita tuliskan ke semua element HTML dan ini akan
  menyebabkan cost performance . oleh karena ini ada cara yang lebih baik untuk mereset default value yang ada pada element2 HTML yang telah di publikasi kan oleh erik meyer.
  bisa di buka di goole ketik css reset meyer, setelah di buka page nya bisa di copy paste kan script css yang sudah beliau tuliskan untuk mereset default value dari element2 HTML.
  
Float :
- merupakan sebuah properti pada CSS untuk mengatur posisi sebuah element. Sebuah element bisa di paksa untuk berada di sebelah kiri atau sebelah kanan dari parent/pembungkusnya
  dengan menggunakan properti ini.
- secara default nilai dari float ini adalah none. opsi nya ada left dan right.
- jika suatu element di berikan properti float (right/left) maka dia akan keluar dari element parent nya. sehingga element parent nya akan mengecil (decompose) dan tampilannyaa element yang
  di berikan float akan mengapung di atas element parent nya. hal ini harus di berikan clear supaya element parent nya tidak mengecil.
- fungsi float ini adalah bisa di gunakan sebagai berikut.
  1. Text Wrapping : membuat text bersebelahan dengan gambar.
  2. Image Gallery : membuat jajaran image.
  3. Multi Column Layout : membuat sebuah kolom layout bisa bersebelahan
- clear adalah cara untuk memberhentikan float. setiap float harus di brentikan dengan clear kalo ga element di sebelahnya akan ngikut dengan float nya.
- property clear mempunyai value left,right dan both. gunanya untuk memberhentikan float left, right atau jika kita menggunakan float right dan left maka kita bisa menggunakan both.
- beberapa cara untuk clear float :
  1. menggunakan property overflow: auto; . property overflow ini membuat element akan menyesuaikan tinggi dari content.
  2. Menggunakan div kosong dan di set clear nya di css akan div tersebut. jadi div kosong nya kita tentu tempat nya dimana kita mau memberhentikan float nya, kita tempat nya div
     kosong nya di sebelah element yang di set float.
  3. Menggunakan teknik micro clear fix. buka halaman https://nicolasgallagher.com/micro-clearfix-hack/ , copy code css nya dan taruh di file css nya. nanti element yang mau di clear
     tinggal di tambahkan class cf di element nya.
	 
Position :
- memungkinnkan kita untuk menggeser sebuah element tanpa mempengaruhi element di sekitar nya. secara default value yang ada pada position adalah static.
- value pada position ada 4 :
  1. Static :  element yang di berikan value static tidak akan berpengaruh dengan top,bottom,left dan righ properties. static ini akan selalu mengikuti normal flow dari halaman.
               artinya jika element yang di set position static itu di geser oleh element lain maka secara normal flow dia juga akan bergeser sesuai margin element yang di berikan margin.
			   dan jika di lihat secara 3 dimensi maka static ini akan terlihat seperti balok yang tersusun rapih.
  2. Relative : - element yang di berikan value non static (selain value static) dapat mengakses properties top,bottom,left,right. element yang di berikan value Relative ini akan maju 1 langkah ke depan/atas jika di lihat
                  dari 3 dimensi sehingga ketika kita geser2 element nya menggunakan properties top,bottom,left,right , element sekitar nya tidak akan ikut bergeser.
				- ketika kita menggerakkan element dengan position relative (properties top,bottom,left,right) ruang yang di tempati oleh element yang di set relative tersebut akan masih ada dengan height dan width yang sama.
				- ketika kita menggerakkan element dengan position relative (properties top,bottom,left,right) element akan bergerak relatif terhadap posisi semula nya, jadi dia akan bergerak dari posisi semula nya.
				- jika kita memberikan properti top: 0 dan left: 0 , maka element tidak akan berubah posisi nya.
  3. Absolute : - ketika kita menggerakkan element dengan position absolute (properties top,bottom,left,right) ruang yang di tempati oleh element yang di set absolute tersebut akan di anggap tidak ada sehingga element 
                  selanjut nya akan menempati ruang element yang di set posisinya absolute.
				- ketika kita menggerakkan element dengan posisi absolute, element akan bergerak relatif terhadap posisi dari element parent nya selama element parent nya memiliki posisi yang non static juga.
				  artinya element parent nya juga harus naik 1 dimensi supaya element yang di set absolute tersebut bisa bergerak relatif terhadap parent nya. 
				- jika kita memberikan properti top: 0, left: 0 , maka element akan berada di ujung kiri atas dari element parent terdekat nya yang posisi nya non static.
  4. Fixed : - ketika kita menggerakkan element dengan posisi fixed, element akan bergerak relatif terhadap window atau browser nya. jadi dia tidak akan memperdulikan element parent nya meskipun element parent nya non static.
             - ketika kita scroll halamannya maka element yang di set posisi nya fixed , element tersebut akan terkunci di posisi nya sehingga akan ikut bergeser sesuai arah scroll nya.
			 - ini biasa di buat jika kita ingin membuat foter, atau navbar yang stay jika ketika di scroll; 
- element yang di set non-static akan bisa mengakses properti top,bottom,left,right . jika top di set 0, left di set 0 dan right di set 0 maka dia akan membentuk bar besar yang panjang nya
  akan memenuhi layar. jadi dia seperti di tarik gitu pake left dan right 0. 
			 
Z-index :
- berguna untuk mengatur posisi atau ordering element pada sumbu z. jadi jika ada suatu element di set position nya non static dia jika di lihat secara 3 dimensi maka element tersebut 
  akan menjadi naik 1 langkah ke sumbu z(tidak sejajar lagi). nah jika kita set beberapa element position nya menjadi non static juga maka kita bisa mengatur ordering element tersebut
  dengan menggunakan z-index . 
- semakin tinggi angka yang di masukkan ke z-index maka ordiering posisi nya akan berada di atas. semakin kecil maka dia akan berada di posisi bawah.

Border-Radius :
- adalah properti di css untuk menumpulkan sudut.
- jika sebuah div di set width nya 200px maka border radius yang set cuman bisa stengah dari width tersebut (100px) karena jika di set border-radius nya di atas dari width tersebut
  maka tidak akan ada efek apa2 karena dia akan membentuk bulat seperti bola.
- kita juga bisa men set ujung2 mana yang harus di tumpulkan :
  1. border-top-right-radius : untuk menumpulkan ujung atas kanan
  2. border-top-left-radius : untuk menumpulkan ujung atas kiri
  3. border-bottom-left-radius: untuk menumpulkan ujung bawah kiri
  4. border-bottom-right-radius: untuk menumpulkan ujung bawah kanan
- kita juga bisa men set langsung ujung2 mana yang bisa di tumpulkan di properti border-radius: atas-kiri atas-kanan bawah-kanan bawah-kiri

Opacity : 
- properti pada css untuk mengatur transparansi dari sebuah element.
- nilai pada opacity ini di mulai dari 0 hingga 1. artinya kalo 0 brarti transparansi nya 0% dan jika 1 brarti transparansi nya 100%.
- element yang di bungkus oleh element lagi dan element pembungkus tersebut di set opacity maka element yang di bungkus tersebut akan ikut transaparant.
- jika child element atau element yang di bungkus juga di berikan opacity maka nilai dari opacity nya akan di mulai dari nilai opacity parent/element pembungkus nya.
  misal element pembungkus set opacity nya 0.5 , jika child element di set nilai opacity nya 0.5 juga maka 0.5 tersebut akan berlaku dari 0.5 opacity parent nya.
- opacity ini bisa di gunakan untuk background element baik gambar atau hanya color saja.
- ada cara lain untuk memberikan opacity, yaitu dengan men set properti background-color RGBA (Red Green Blue Alpha) dan HSLA (Hue Saturation Lightness Alpha). namun ini hanya
  berlaku untuk element dengan background-color, untuk background-image tidak berlaku. cth : background-color: rgba(255,102,0,0.5); nilai 0.5 di blakang untuk mengatur transparansi nya
  sedangkan untuk angka yang di depan nya untuk mengatur warna nya. begitu juga untuk HSLA -> background-color: hsla(24,100%,68%,0.5); nilai 0.5 di blakang untuk mengatur transparansi
  sedangkan untuk di depannya untuk mengatur warna background nya. untuk kode2 rgba dan hsla ini silahkan di cari di color pallete di google.
  
Box-shadow & Text-Shadow: 
- untuk memberikan bayangan di blakang pada suatu element.
- pattern nyaa adalah berikut : inset(optional) box-shadow: x-offset y-offset blur spread(optional) color;
- berikut penjelasannya :
  1. x-offset : untuk menggerakkan bayangan di sumbu x (vertikal)
  2. y-offset : untuk menggerakkan bayangan di sumbu y (horizontal)
  3. blur : untuk mengatur tingkat blur nyaa bayangan
  4. spread untuk mengatur tingkat ketebalan/ukuran bayangan
  5. color : untuk mengatur warna bayangannya. ini bisa menggunakan rgba() supaya dia ada opacity nya.
  6. inset : untuk membuat bayanganyannya berada di dalam element.
- box shadow ini juga bisa kita gunakan sebagai border. cara nya adalah dengan men set x-offset dan y-offset 0, blur nya di set 0 juga untuk mendapatkan solid border nya
  namun spread nya di isi kan value untuk memberikan ketebalan border. contoh: box-shadow: 0px 0px 0px 10px rgba(0,0,0,075);
- box shadow ini juga bisa di buat multiple. cara nya adalah berikut -> box-shadow: value shadow1, value shadow2 , value shadow3 , dan seterusnya.
  contoh:   box-shadow: 0px 0px 0px 10px rgba(0,0,0,075) , 0px 0px 0px 15px red , 0px 0px 0px 20px blue , 0px 0px 0px 30px green;
- pada text-shadow tidak ada value untuk men set inset dan spread, selebih nyaa sama dengan box-shadow.

Gradient :
- untuk memberikan warna gradasi kepada sebuah element. ada 2 tipe yang bisa di gunakan dalam gradient ini.
  1. linear-gradient : untuk memberikan gradasi warna secara garis lurus
  2. radial-gradient : untuk memberikan gradasi warna secara melingkar.
- gradient ini bukan merupakan property CSS3, namun adalah value untuk mengisi background image, jadi background image selain bisa di isi oleh image dia juga bisa di isi kan oleh
  gradient value.
- di dalam pengisian value warna di gradient ini kita juga bisa memasukkan rgba dan hsla .  
Linear Gradient:
- syntaks : background-image: liean-gradient(arah(satuan deg/degree)/arah , awal warna color-stop(optional),warna ke dua color-stop(optional),warna ke tiga color-stop(optional),... warna ke n color-stop(optional));
- contoh : background-image: liean-gradient(0deg , red,blue,green);  , contoh lain : liean-gradient(to right , red 63%, green 80%);
- penjelasan :
  1. arah : untuk mengatur arah gradient. dalam memberikan value arah ini kita bisa menggunakan degree atau fix value.
  - 0 deg : dari atas ke bawah;
  - 45 deg : dari kiri atas ke kanan bawah;
  - 90 deg : dari kiri ke kanan;
  - 180 deg : dari bawah ke atas;
  - 270 deg : dari kanan ke kiri;
  fix value :
  - to bottom : dari atas ke bawah
  - to top : dari bawah ke atas
  - to left : dari kanan ke kiri
  - to right : dari kiri ke kanan.
  - to left top : dari atas kiri ke bawah kanan
  - to left bottom : dari bawah kiri ke atas kanan
  - to right top : dari kanan atas ke bawah kiri
  - to right bottom : dari kanan bawah ke kiri atas
Radial Gradient:
- berbeda dengan linear, gradial dia bentuk nyaa melingkar. warna awal yang di set akan menjadi warna center nya dan warna selanjutnya akan menjadi warna border nya.
- syntaks : background-image: radial-gradient(<tipe> <jangkauan> at <posisi-y> <posisi-x> ,<warna-awal> color-stop, <warna-kedua> color-stop, <warna-ke n> color-stop);
- tipe di radial gradient ini ada 2, circle dan ellipse namun secara default value yang di isi kan adalah circle.
- jangkauan adalah jarak dari pusat gradient ke sisi terluar nya. jangkauan ini ada tipe nya.
  1. closest-corner : jarak dari pusat gradient ke sudut terdekat element.
  2. closest-side : jarak dari pusat gradient ke sisi terdekat element.
  3. farthest-corner : jarak dari pusat gradient ke sudut terjauh element.
  4. farthest-side : jarak dari pusat gradient ke sisi terjauh element.
- posisi x dan y bisa di isi kan value berikut :
  posisi y : top,center,bottom, px
  posisis x : left,center,right, px
  
@Font-face :
- adalah properti pada css3 jika kita ingin menggunakan font yang sudah kita donwload ke local pc kita.
- @font-face ini nanti akan berisikan url lokasi file font nya (extensi nya tff atau woff atau woff2) dan font-familiy (nama font familiy ini bisa bebas tapi di recomendasikan
  di samakan dengan nama font ketika download nya). nama yang sudah di input kan di font familiy tersebut nanti yang akan di gunakan untuk merubah font style nya lewat properti
  font-family.
contoh :
@font-face{
	font-family: "nama font bebas";
	src: url('lokasi file font yang sudah kita donwload dengan ekstensi tff,woff') format('truetype');
}

h1{
	font-family: "nama font yang di @font-face"
}

- extensi paling baik untuk font adalah woff karena lebih ringan di banding kan tff.
- kita juga bisa menconvert file font tff ke woff dengan menggunakan css generator. silahkan google font apa saja yang mempunyai css generator nya.
- contoh font-family : font-family : "arial narrow", arial,sans-serif; . itu artinya dia akan mencari font arial narrow dulu, jika tidak ketemu maka akan mencari font
  arial dan jika tidak ketemu juga akan mencari font sans-serif .
  
Vendor Prefix :
- teknik di css 3 untuk membuat semua syntaks CSS3 kita compatible di semua browser. jadi ini adalah syntaks khusus yang harus di tambahkan untuk beberapa properti di CSS3 .
- berikut adalah syntaks vendor prefix.
  1. -webkit-<properti-css3> -> untuk compatible di browser Chrome,Safarai,Opera versi terbaru.
  2. -moz-<properti-css3> -> untuk compatible di browser Firefox
  3. -ms-<properti-css3> -> untuk compatible di browser Internet Explorer
  4. -o-<properti-css3> -> untuk compatible di browser Opera versi terdahulu
- untuk mengecek properti CSS3 mana yang membutuhkan prefix kita bisa melihat pada web ini https://shouldiprefix.com/ atau https://caniuse.com/ atau https://pleeease.io/play/.
- contoh :
.example {
  -webkit-filter: grayscale(50%); /* Ch 23+, Saf 6.0+, BB 10.0+ */
          filter: grayscale(50%); /* FF 35+ */
}

Filter:
- properti pada CSS3 yang di gunakan untuk memberikan efek visual pada gambar, background atau border.
- filter ini perlu di berikan vendor prefix supaya bisa berjalan compatible di semua browser.
- syntaks -> filter: <tipe-filter>
- berikut adalah tipe2 dari filter :
  1. blur
  2. brightness
  3. contrast
  4. saturate
  5. grayscale
  6. sepia
  7. hue rotate
  8. invert
  9. opacity
  10. drop-shadow
- efek filter ini bisa multiple cara nya berikut -> filter: blur() grayscale() sepia();

Transform: 
- properti pada CSS3 yang memungkinkan kita dapat memanipulasi format visual dari element HTML. transform ini terdapat di 2D dan 3D .
- syntaks -> transform: <fungsi>;
- berikut adalah fungsi2 nya :
  1. scale(angka)/scaleX(angka)/scaleY(angka) -> untuk memperbesar dan memperkecil
  2. rotate(deg)/rotateX(deg)/rotateY(deg) -> untuk memutar
  3. skew(deg)/skewX(deg)/skewY(deg) -> untuk membuat element menjadi condong
  4. translate(px)/translateX(px)/translateY(px) -> untuk mengubah posisi element.
  
Transition : 
- properti pada CSS3 yang memungkinkan kita untuk mengubah nilai dari properti HTML secara halus.
- syntaks -> transition: [property] <durasi> [fungsi][delay];
- durasi ini dalam satuan s(second)/ms(milisecond)
- property ini untuk menentukan property pada CSS3 apa saja yang akan di lakukan transisi. secara default adalah all.
  berikut adalah properti pada CSS3 yang bisa di rubah : background-color , background-position , background-size , border , color , filter , font-size , line-height,
                                                         top, left, bottom, right, margin, padding, width, height, opacity, transform, word-spacing, letter-spacing.
  property yang tidak bisa : font-family, display, position.
- fungsi di transisi ini di sebut juga timing function. ada beberapa function yang bisa di gunakan namun secara default fungsi nya adalah ease.
  1. ease : specifies a transition effect with a slow start, then fast, then end slowly (this is default)
  2. ease-in : specifies a transition effect with a slow start
  3. ease-out : specifies a transition effect with a slow end
  4. ease-in-out : specifies a transition effect with a slow start and end
  5. linear : specifies a transition effect with the same speed from start to end
  6. cubic-bezier(w,x,y,z) : lets you define your own values in a cubic-bezier function. setting sendiri kapan fast, slow dll.
  
Animation:
- properti pada CSS3 yang memungkinkan kita untuk membuat animasi pada HTML element tanpa menggunakan javascript atau flash
- pada animasi ini kita akan menggunakan bantuan @Keyframe dimana keyframe ini untuk menentukan perubahan2 yang akan kita lakukan di element HTML.
- syntaks : 
@Keyframe nama-keyframe { 
	from: {properti-css3 yang akan di ubah pada awal}
	to: {properti-css3 yang akan di ubah pada akhir}
}
- from ini merepresentasikan 0%(start) dan to ini merepresentasikan 100% (complete)
- kita jika bisa menentukan keyframe nyaa by prosentasenya (0%,25%,50%,75%,100%).
- berikut adalah property yang terkait Animation :
  1. animation-name : nama animasi yang di set pada property @Keyframe.
  2. animation-duration : durasi yang di butuhkan oleh animasi dari 0% hingga 100%.
  3. animation-delay : delay (s/ms) yang di butuhkan sebelum start animasi.
  4. animation-iteration-count : untuk menentukan brapa kali animasi tersebut harus berjalan. jika kita ingin animasi berulang terus bisa di isi kan infinite.
  5. animation-direction : untuk menentukan arah urutan jalannya animasi. ada beberapa value yang bisa di gunakan.
     - normal - The animation is played as normal (forwards). This is default
	 - reverse - The animation is played in reverse direction (backwards)
	 - alternate - The animation is played forwards first, then backwards
	 - alternate-reverse - The animation is played backwards first, then forwards
  6. animation-timing-function : property yang di gunakan untuk menentukan kecepatan curving(berputar2 atau bergeser,dll) dari animasi nya.
  7. animation-fill-mode : property untuk menspesifikan style untuk target element ketika animasi belum berjalan dan ketika animasi sesudah berjalan. jadi intinya properti ini
     akan menset style element sebelum animasi di mulai atau setelah animasi selesai style nyaa akan seperti apa, apakah style akhir element ikut sesuai urutan frame, atau style
	 akhir element akan ikut ke style pada frame pertama. berikut adalah contoh2 value nya:
    - none - Default value. Animation will not apply any styles to the element before or after it is executing
	- forwards - The element will retain the style values that is set by the last keyframe (depends on animation-direction and animation-iteration-count)
	- backwards - The element will get the style values that is set by the first keyframe (depends on animation-direction), and retain this during the animation-delay period
	- both - The animation will follow the rules for both forwards and backwards, extending the animation properties in both directions
  8. animation : untuk membuat shorthand animasi.
     animation : [name] [duration] [timing-function] [delay] [iteration-count] [direction] [fill-mode] [play-state];
  9. animation-play-state : untuk menentukan animasi nya berjalan atau tidak, jika di pause maka animasi tidak akan berjalan. pause ini nanti bisa di gunakan pada javascript.