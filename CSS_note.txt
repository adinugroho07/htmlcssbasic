display 
div secara default display nya adalah block
span secara default display nya adalah inline

element yang secara default display block :
 - <address> , <article> , <aside> , <blockquote> , <canvas> , <dd> , <div> , <dl> , <dt> , <fieldset> , <figcaption> , <figure> , <footer> , <form>
   <h1>-<h6> , <header> , <hr> , <li> , <main> , <nav> , <noscript> , <ol> , <p> , <pre> , <section> , <table> , <tfoot> , <ul> , <video> 

- block : - Element HTML yang secara default akan menambahkan line baru ketika di buat.
          - jika di tidak di atur lebar nya maka lebar default dari element block akan memenuhi lebar dari browser / parent nya.
		  - kita dapat mengatur tinggi dan lebar dari element block.
		  - di dalam element block kita dapat menyimpan tag dengan element inline, inline block atau bahkan element block lagi.
- inline : - element HTML yang secara default tidak menambahkan baris baru ketika di buat. 
           - lebar dan tinggi element nya sebesar konten yang ada di dalam nya.
           - kita tidak dapat mengatur tinggi dan lebar dari elemen inline
           - Margin dan pasdding hanya mempengaruhi element secara horizontal, tidak vertikal. 
  contoh element yang inline : b, strong, i, em, a,span,sub,sup,button, input,label,select,textarea,img
- inline-block : - tidak ada element yang secara default memiliki properti display: inline-block
                 - kita harus ubah secara manual properti tersebut.
                 - prilaku dasarnya sama dengan inline
                 - perbedaannya element inline-block dapat kita atur tinggi dan lebar nya. 				 
				 
- none : di gunakan untuk menghilangkan sebuah element.

Flexbox :
- di gunakan untuk mensejajarkan element secara vertikal atau sejajar dengan lebar antar element yang sama.
- model layout 1 dimensi yang dapat mengatur jarak dan penjajaran antar item dalam sebuah container. maksud dari 1 dimensi ini adalah kita hanya dapat mengatur 1 dimensi
  secara horizontal(ke kanan->ke kiri) atau vertikal (keatas->kebawah) atau bisa kita sebut antara baris atau kolom.
- sebuah module yang menawarkan cara yang efektif untuk menyusun, mensejajarkan dan mendistribusikan jarak antar item di dalam sebuah container, meskipun ukurannya
  dinamis atau bahkan kita tidak tahu.
- flexbox ini harus mempunyai element pembungkusnya yang di namakan container/parents. element2 yang ada di dalam nya itu di sebut items/child.
- main axis adalah untuk men set element secara horizontal/baris, sedangkan untuk men set element secara vertikal/kolom kita sebut cross axis.
- main size adalah ukuran dari kontainer nya.
- cross size adalah ukuran dari kolom nya.
- main start dan main end adalah untuk menentukan awal dan akhir dari element nya secara horizontal.
- cross start dan cross end adalah untuk menentukan awal dan akhir dari element nya secara vertikal.
- property -> display: flex -> membuat sebuah element parent/pembungkusnya menjadi flex box dan element2 di dalam nya bisa berprilaku flex juga. 
- beberapa property yang bisa di gunakan pada flex container.
	- flex-direction : untuk menentukan arah (horizontal/vertikal) dari item2 pada container. berikut pilihan value nya :
		  1. row : secara horizontal dengan urutan normal.
		  2. row-reverse : secara horizontal dengan urutan terbalik.
		  3. column : secara vertikal dengan urutan normal.
		  4. column-reverse : secara vertikal dengan urutan terbalik.
	- flex-wrap : untuk mengatur ketika element items yang ada sudah tidak muat di baris nya sehingga item yang tidak muat tersebut di pindah kan ke baris bawah nya.
	  jika tidak di berikan flex-wrap maka items akan di paksa untuk fit di dalam container dengan cara lebar dan tinggi items di kecil kan supaya fit di container.
	  berikut pilihan value nya :
		  1. nowrap : tidak di wrap.
		  2. wrap : untuk menurunkan item pada baris jika sudah tidak cukup di baris nya sehingga lebar dan tinggi items tidak mengecil.
		  3. wrap-reverse :
	- flex-flow
	- justify-content : untuk mengatur rata dari element2 items secara horizontal di dalam container. berikut pilihan opsip nya :
		  1. flex-start : membuat posisi items berada di kiri.
		  2. flex-end : membuat posisi items berada di kanan.
		  3. center : membuat posisi items berada di tengah.
		  4. space-between : membuat antar element terdapat space atau ruang.
		  5. space-around : membuat pada setiap element baik kiri dan kanan mempunyai space atau ruang dengan ukuran yang sama.
		  6. space-evenly : membuat jarak antar element sama.
	- align-items : untuk mengatur kesejajaran antar items secara vertikal. berikut pilihan opsi nya :
		  1. flex-start : membuat posisi items berada di atas semua start nya.
		  2. flex-end : membuat posisi items berada di bawah semua start nya.
		  3. center : membuat posisi items berada sejajar di tengah secara vertikal.
		  4. stretch : akan menarik elemnt untuk memenuhi container tapi di element items nya harus tidak di set height nya.
		  5. baseline : mengatur rata tengah nya berdasarkan tulisan yang ada pada element items.
	- align-content

- perhitungan dengan menggunakan % adalah dia mengambil prosentase dari parent element nya.
  contoh di dalam body kita buat div, di div kita kasih css dengan width 100%, artinya width di div akan mengambil 100% panjang dari element parent nya body.			
  jika pada element div tersebut prosentase nya di set di atas 100% maka nanti lebar dari div tersebut akan melebihi lebar dari parent nya.
- jika pada div width di set up panjang nya dan tinggi div tidak di set up maka tinggi pada div tersebut akan mengikut tinggi dari content yang ada di dalam div .
  begitu juga sebalik nya jika width pada div tidak di set dan tinggi div di set maka lebar div akan mengikuti content yang ada di dalam div tersebut. namun jika 
  width dan height pada div tidak di set maka lebar dan tinggi div akan mengikutin content yang ada didalam div.
- jika content yang ada di dalam div mempunyai ukuran lebih tinggi dari width dan height yang telah di set di div maka content tersebut akan luber keluar melebihi
  width dan height yang telah di set.  
  
Overflow : di gunakan jika sebuah kontent pada div, lebar dan tinggi nya melebihi dari lebar dan tinggi div parent yang telah di set.
berikut macam2 overflow :
- visible : secara default overflow yang di gunakan adalah visible yang artinya dia akan memperlihat kan kontent yang keluar dari 
            parent nya (lebar & tinggi content > lebar & tinggi div).
- Auto : jika panjang & tinggi kontent melebihi panjang & tinggi parent nya (div) yang telah di set maka nanti di div akan di buat ada scroll bar nya. tapi jika tinggi dan lebar
         content tidak melebihi parent nya (div) maka scroll bar akan secara otomatis ilang.
- Hidden : jika panjang & tinggi kontent melebihi panjang & tinggi parent nya (div) yang telah di set maka nanti sisa bagian content yang keluar dari parent nya akan di hide
           dan tidak dapat di akses.
- Scroll : jika panjang & tinggi kontent melebihi panjang & tinggi parent nya (div) yang telah di set maka nanti di div akan di buat ada scroll bar nya. tapi jika tinggi dan lebar
           content tidak melebihi parent nya (div) maka scroll bar akan tetap ada walaupun tidak bisa di akses.


Konsep Dasar : 
- Setiap Element di halaman berada di dalam sebuah box(kotak)
- kita bisa mengatur ukuran dan posisi kotak tersebut.
- kita bisa memberi warna atau gambar background dari kotak tersebut.
- CSS box model mendefinisikan kotak yang di hasilkan oleh sebuah element lalu menampilkan sesuai dengan format visual nya.
- css box model terdiri dari margin,border,padding,content. urutannya dari sebuah box model adalah margin>border>padding>content
  - margin : area transparant di sekitar kotak (di luar border)
  - padding : area transparant di dalam kotak (antara kontent dan border)
  - border : batas di keliling content dan padding.
  - content : konten sebenarnya di dalam box, bisa berupa text atau gambar.

Margin Overlapping : 
- jika ada 2 box model yang berposisi sejajar vertikal, box 1 di set margin-bottom 150px dan box 2 di set margin-top 50px maka jarak margin antara
  box 1 dan 2 adalah 150px. jadi margin ini tidak akan saling menambahkan jarak nya khusus yang vertikal, dia akan selalu pilih jarak yang paling besar (box 1)
- jika ada 2 box model yang berposisi sejajar horizontal, box 1 di set margin-right 50px, box 2 di set margin-left 30px. maka jarak antara box 1 dan 2 akan menjadi 80px.
  jadi margin ini akan saling menambahkan jaraknya jika posisi box model sejajar horizontal.

Negatif Margin :
- jika sebuah box model di set margin nya negatif maka dia akan bergerak ke arah sebalik nya. contoh margin-top di set negatif maka box model akan bergerak ke atas.
  namun perlu di perhatikan jika menggunakan margin negatif itu, karena jika sebuah box model set negatif margin nya maka box model di sebelah akan ikut bergerak sesuai dengan
  box model yang di set negatif margin nya.

Margin Auto :
- jika box model di set margin auto maka posisi nya dia akan berada di tengah dari parent element nya. misal ada div di dalam body dan div tersebut margin nya di set Auto
  maka div tersebut akan bergeser ke tengah dari element parent nya (body).

Margin setting :
- margin : value(set atas dan bawah) value(set kiri dan kanan);  
- margin : value(set atas) value(set kiri dan kanan) value(set bawah);
- margin : value(set atas) value(set kanan) value(set bawah) value(set kiri)

Padding & Border :
- lebar dari padding dan border akan berpengaruh kepada lebar box nya. contoh jika ada suatu box di set width nya 300px dan tinggi 300px. jika di box tersebut padding di set 10px,
  border di set 5px, maka lebar box tersebut adalah 300px + 5px (border kiri) + 10px (padding kiri) + 10px (padding kanan) + 5px (border kanan) jadi 330px width box nya. jadi jika
  kita ingin tetap lebar box nya di 300px maka kita perlu hitung seperti ini 300px (lebar box) - (5px (border kiri) + 10px (padding kiri) + 10px (padding kanan) + 5px (border kanan))
  jadi hasil nya 270px, sehingga width dari box tersebut di set 270px.
- Padding tidak menerima value negatif dan auto, jika padding di set negatif atau auto maka dia tidak akan bereaksi apa2.  
- format penulisan border -> border : (tebal border) (tipe/style border) (warna garis border); contoh = border: 5px solid black;
  style border ada 4 : solid , dotted , dashed , double .

Box-sizing : 
- untuk membuat lebar dari box sesuai dengan yang di set di awal walaupun ada penambahan lebar box dari border dan padding. jadi misal sebuah box di set width nya 300px
  dan di tambahkan box-sizing: border-box, maka walaupun kita set padding dan border di box tersebut (brapa pun nilai nya) , lebar dari box tersebut akan tetap 300px.
- syntaks nya adalah -> box-sizing: border-box
            
CSS Reset :
- untuk mereset semua default value yang ada pada body,div,dll. cara nya dengan menggunakan universal selector (*) .
- contoh -> * { css code } 
- namun menggunakan css reset universal ini juga ada yang bilang kurang baik karena dia akan memberikan efek dari code yang kita tuliskan ke semua element HTML dan ini akan
  menyebabkan cost performance . oleh karena ini ada cara yang lebih baik untuk mereset default value yang ada pada element2 HTML yang telah di publikasi kan oleh erik meyer.
  bisa di buka di goole ketik css reset meyer, setelah di buka page nya bisa di copy paste kan script css yang sudah beliau tuliskan untuk mereset default value dari element2 HTML.
  
Float :
- merupakan sebuah properti pada CSS untuk mengatur posisi sebuah element. Sebuah element bisa di paksa untuk berada di sebelah kiri atau sebelah kanan dari parent/pembungkusnya
  dengan menggunakan properti ini.
- secara default nilai dari float ini adalah none. opsi nya ada left dan right.
- jika suatu element di berikan properti float (right/left) maka dia akan keluar dari element parent nya. sehingga element parent nya akan mengecil (decompose) dan tampilannyaa element yang
  di berikan float akan mengapung di atas element parent nya. hal ini harus di berikan clear supaya element parent nya tidak mengecil.
- fungsi float ini adalah bisa di gunakan sebagai berikut.
  1. Text Wrapping : membuat text bersebelahan dengan gambar.
  2. Image Gallery : membuat jajaran image.
  3. Multi Column Layout : membuat sebuah kolom layout bisa bersebelahan
- clear adalah cara untuk memberhentikan float. setiap float harus di brentikan dengan clear kalo ga element di sebelahnya akan ngikut dengan float nya.
- property clear mempunyai value left,right dan both. gunanya untuk memberhentikan float left, right atau jika kita menggunakan float right dan left maka kita bisa menggunakan both.
- beberapa cara untuk clear float :
  1. menggunakan property overflow: auto; . property overflow ini membuat element akan menyesuaikan tinggi dari content.
  2. Menggunakan div kosong dan di set clear nya di css akan div tersebut. jadi div kosong nya kita tentu tempat nya dimana kita mau memberhentikan float nya, kita tempat nya div
     kosong nya di sebelah element yang di set float.
  3. Menggunakan teknik micro clear fix. buka halaman https://nicolasgallagher.com/micro-clearfix-hack/ , copy code css nya dan taruh di file css nya. nanti element yang mau di clear
     tinggal di tambahkan class cf di element nya.
	 
Position :
- memungkinnkan kita untuk menggeser sebuah element tanpa mempengaruhi element di sekitar nya. secara default value yang ada pada position adalah static.
- value pada position ada 4 :
  1. Static :  element yang di berikan value static tidak akan berpengaruh dengan top,bottom,left dan righ properties. static ini akan selalu mengikuti normal flow dari halaman.
               artinya jika element yang di set position static itu di geser oleh element lain maka secara normal flow dia juga akan bergeser sesuai margin element yang di berikan margin.
			   dan jika di lihat secara 3 dimensi maka static ini akan terlihat seperti balok yang tersusun rapih.
  2. Relative : - element yang di berikan value non static (selain value static) dapat mengakses properties top,bottom,left,right. element yang di berikan value Relative ini akan maju 1 langkah ke depan/atas jika di lihat
                  dari 3 dimensi sehingga ketika kita geser2 element nya menggunakan properties top,bottom,left,right , element sekitar nya tidak akan ikut bergeser.
				- ketika kita menggerakkan element dengan position relative (properties top,bottom,left,right) ruang yang di tempati oleh element yang di set relative tersebut akan masih ada dengan height dan width yang sama.
				- ketika kita menggerakkan element dengan position relative (properties top,bottom,left,right) element akan bergerak relatif terhadap posisi semula nya, jadi dia akan bergerak dari posisi semula nya.
				- jika kita memberikan properti top: 0 dan left: 0 , maka element tidak akan berubah posisi nya.
  3. Absolute : - ketika kita menggerakkan element dengan position absolute (properties top,bottom,left,right) ruang yang di tempati oleh element yang di set absolute tersebut akan di anggap tidak ada sehingga element 
                  selanjut nya akan menempati ruang element yang di set posisinya absolute.
				- ketika kita menggerakkan element dengan posisi absolute, element akan bergerak relatif terhadap posisi dari element parent nya selama element parent nya memiliki posisi yang non static juga.
				  artinya element parent nya juga harus naik 1 dimensi supaya element yang di set absolute tersebut bisa bergerak relatif terhadap parent nya. 
				- jika kita memberikan properti top: 0, left: 0 , maka element akan berada di ujung kiri atas dari element parent terdekat nya yang posisi nya non static.
  4. Fixed : - ketika kita menggerakkan element dengan posisi fixed, element akan bergerak relatif terhadap window atau browser nya. jadi dia tidak akan memperdulikan element parent nya meskipun element parent nya non static.
             - ketika kita scroll halamannya maka element yang di set posisi nya fixed , element tersebut akan terkunci di posisi nya sehingga akan ikut bergeser sesuai arah scroll nya.
			 - ini biasa di buat jika kita ingin membuat foter, atau navbar yang stay jika ketika di scroll;